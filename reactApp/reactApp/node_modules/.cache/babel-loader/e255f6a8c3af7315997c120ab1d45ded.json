{"ast":null,"code":"'use strict';\n\nvar AdvanceStringIndex = require('es-abstract/2019/AdvanceStringIndex');\n\nvar CreateDataPropertyOrThrow = require('es-abstract/2019/CreateDataPropertyOrThrow');\n\nvar GetMethod = require('es-abstract/2019/GetMethod');\n\nvar IsArray = require('es-abstract/2019/IsArray');\n\nvar IterableToList = require('es-abstract/2019/IterableToList');\n\nvar OrdinarySetPrototypeOf = require('es-abstract/2019/OrdinarySetPrototypeOf');\n\nvar Type = require('es-abstract/2019/Type');\n\nvar GetIntrinsic = require('es-abstract/GetIntrinsic');\n\nvar getIteratorMethod = require('es-abstract/helpers/getIteratorMethod');\n\nvar define = require('define-properties');\n\nvar $Error = GetIntrinsic('%Error%'); // eslint-disable-next-line func-style\n\nfunction AggregateError(errors, message) {\n  var error = new $Error(message);\n  OrdinarySetPrototypeOf(error, proto); // eslint-disable-line no-use-before-define\n\n  delete error.constructor;\n  var errorsList = IterableToList(errors, getIteratorMethod({\n    AdvanceStringIndex: AdvanceStringIndex,\n    GetMethod: GetMethod,\n    IsArray: IsArray,\n    Type: Type\n  }, errors));\n  CreateDataPropertyOrThrow(error, 'errors', errorsList);\n  return error;\n}\n\nvar proto = AggregateError.prototype;\ndefine(AggregateError.prototype, {\n  constructor: AggregateError,\n  message: '',\n  name: 'AggregateError'\n});\nOrdinarySetPrototypeOf(AggregateError.prototype, Error.prototype);\nmodule.exports = AggregateError;","map":{"version":3,"sources":["C:/Users/vaibhav/GIT-HUB/link-io/reactApp/node_modules/es-aggregate-error/implementation.js"],"names":["AdvanceStringIndex","require","CreateDataPropertyOrThrow","GetMethod","IsArray","IterableToList","OrdinarySetPrototypeOf","Type","GetIntrinsic","getIteratorMethod","define","$Error","AggregateError","errors","message","error","proto","constructor","errorsList","prototype","name","Error","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,kBAAkB,GAAGC,OAAO,CAAC,qCAAD,CAAhC;;AACA,IAAIC,yBAAyB,GAAGD,OAAO,CAAC,4CAAD,CAAvC;;AACA,IAAIE,SAAS,GAAGF,OAAO,CAAC,4BAAD,CAAvB;;AACA,IAAIG,OAAO,GAAGH,OAAO,CAAC,0BAAD,CAArB;;AACA,IAAII,cAAc,GAAGJ,OAAO,CAAC,iCAAD,CAA5B;;AACA,IAAIK,sBAAsB,GAAGL,OAAO,CAAC,yCAAD,CAApC;;AACA,IAAIM,IAAI,GAAGN,OAAO,CAAC,uBAAD,CAAlB;;AACA,IAAIO,YAAY,GAAGP,OAAO,CAAC,0BAAD,CAA1B;;AACA,IAAIQ,iBAAiB,GAAGR,OAAO,CAAC,uCAAD,CAA/B;;AACA,IAAIS,MAAM,GAAGT,OAAO,CAAC,mBAAD,CAApB;;AAEA,IAAIU,MAAM,GAAGH,YAAY,CAAC,SAAD,CAAzB,C,CAEA;;AACA,SAASI,cAAT,CAAwBC,MAAxB,EAAgCC,OAAhC,EAAyC;AACxC,MAAIC,KAAK,GAAG,IAAIJ,MAAJ,CAAWG,OAAX,CAAZ;AACAR,EAAAA,sBAAsB,CAACS,KAAD,EAAQC,KAAR,CAAtB,CAFwC,CAEF;;AACtC,SAAOD,KAAK,CAACE,WAAb;AAEA,MAAIC,UAAU,GAAGb,cAAc,CAACQ,MAAD,EAASJ,iBAAiB,CAAC;AACzDT,IAAAA,kBAAkB,EAAEA,kBADqC;AAEzDG,IAAAA,SAAS,EAAEA,SAF8C;AAGzDC,IAAAA,OAAO,EAAEA,OAHgD;AAIzDG,IAAAA,IAAI,EAAEA;AAJmD,GAAD,EAKtDM,MALsD,CAA1B,CAA/B;AAMAX,EAAAA,yBAAyB,CAACa,KAAD,EAAQ,QAAR,EAAkBG,UAAlB,CAAzB;AAEA,SAAOH,KAAP;AACA;;AACD,IAAIC,KAAK,GAAGJ,cAAc,CAACO,SAA3B;AAEAT,MAAM,CAACE,cAAc,CAACO,SAAhB,EAA2B;AAChCF,EAAAA,WAAW,EAAEL,cADmB;AAEhCE,EAAAA,OAAO,EAAE,EAFuB;AAGhCM,EAAAA,IAAI,EAAE;AAH0B,CAA3B,CAAN;AAMAd,sBAAsB,CAACM,cAAc,CAACO,SAAhB,EAA2BE,KAAK,CAACF,SAAjC,CAAtB;AAEAG,MAAM,CAACC,OAAP,GAAiBX,cAAjB","sourcesContent":["'use strict';\n\nvar AdvanceStringIndex = require('es-abstract/2019/AdvanceStringIndex');\nvar CreateDataPropertyOrThrow = require('es-abstract/2019/CreateDataPropertyOrThrow');\nvar GetMethod = require('es-abstract/2019/GetMethod');\nvar IsArray = require('es-abstract/2019/IsArray');\nvar IterableToList = require('es-abstract/2019/IterableToList');\nvar OrdinarySetPrototypeOf = require('es-abstract/2019/OrdinarySetPrototypeOf');\nvar Type = require('es-abstract/2019/Type');\nvar GetIntrinsic = require('es-abstract/GetIntrinsic');\nvar getIteratorMethod = require('es-abstract/helpers/getIteratorMethod');\nvar define = require('define-properties');\n\nvar $Error = GetIntrinsic('%Error%');\n\n// eslint-disable-next-line func-style\nfunction AggregateError(errors, message) {\n\tvar error = new $Error(message);\n\tOrdinarySetPrototypeOf(error, proto); // eslint-disable-line no-use-before-define\n\tdelete error.constructor;\n\n\tvar errorsList = IterableToList(errors, getIteratorMethod({\n\t\tAdvanceStringIndex: AdvanceStringIndex,\n\t\tGetMethod: GetMethod,\n\t\tIsArray: IsArray,\n\t\tType: Type\n\t}, errors));\n\tCreateDataPropertyOrThrow(error, 'errors', errorsList);\n\n\treturn error;\n}\nvar proto = AggregateError.prototype;\n\ndefine(AggregateError.prototype, {\n\tconstructor: AggregateError,\n\tmessage: '',\n\tname: 'AggregateError'\n});\n\nOrdinarySetPrototypeOf(AggregateError.prototype, Error.prototype);\n\nmodule.exports = AggregateError;\n"]},"metadata":{},"sourceType":"script"}
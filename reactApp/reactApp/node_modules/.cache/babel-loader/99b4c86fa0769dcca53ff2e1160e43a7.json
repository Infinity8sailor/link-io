{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar GetV = require('./GetV');\n\nvar IsCallable = require('./IsCallable');\n\nvar IsPropertyKey = require('./IsPropertyKey');\n/**\n * 7.3.9 - https://ecma-international.org/ecma-262/6.0/#sec-getmethod\n * 1. Assert: IsPropertyKey(P) is true.\n * 2. Let func be GetV(O, P).\n * 3. ReturnIfAbrupt(func).\n * 4. If func is either undefined or null, return undefined.\n * 5. If IsCallable(func) is false, throw a TypeError exception.\n * 6. Return func.\n */\n\n\nmodule.exports = function GetMethod(O, P) {\n  // 7.3.9.1\n  if (!IsPropertyKey(P)) {\n    throw new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n  } // 7.3.9.2\n\n\n  var func = GetV(O, P); // 7.3.9.4\n\n  if (func == null) {\n    return void 0;\n  } // 7.3.9.5\n\n\n  if (!IsCallable(func)) {\n    throw new $TypeError(P + 'is not a function');\n  } // 7.3.9.6\n\n\n  return func;\n};","map":{"version":3,"sources":["C:/Users/vaibhav/GIT-HUB/link-io/reactApp/node_modules/es-abstract/2019/GetMethod.js"],"names":["GetIntrinsic","require","$TypeError","GetV","IsCallable","IsPropertyKey","module","exports","GetMethod","O","P","func"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,iBAAD,CAA1B;;AAEA,IAAIC,UAAU,GAAGF,YAAY,CAAC,aAAD,CAA7B;;AAEA,IAAIG,IAAI,GAAGF,OAAO,CAAC,QAAD,CAAlB;;AACA,IAAIG,UAAU,GAAGH,OAAO,CAAC,cAAD,CAAxB;;AACA,IAAII,aAAa,GAAGJ,OAAO,CAAC,iBAAD,CAA3B;AAEA;;;;;;;;;;;AAUAK,MAAM,CAACC,OAAP,GAAiB,SAASC,SAAT,CAAmBC,CAAnB,EAAsBC,CAAtB,EAAyB;AACzC;AACA,MAAI,CAACL,aAAa,CAACK,CAAD,CAAlB,EAAuB;AACtB,UAAM,IAAIR,UAAJ,CAAe,gDAAf,CAAN;AACA,GAJwC,CAMzC;;;AACA,MAAIS,IAAI,GAAGR,IAAI,CAACM,CAAD,EAAIC,CAAJ,CAAf,CAPyC,CASzC;;AACA,MAAIC,IAAI,IAAI,IAAZ,EAAkB;AACjB,WAAO,KAAK,CAAZ;AACA,GAZwC,CAczC;;;AACA,MAAI,CAACP,UAAU,CAACO,IAAD,CAAf,EAAuB;AACtB,UAAM,IAAIT,UAAJ,CAAeQ,CAAC,GAAG,mBAAnB,CAAN;AACA,GAjBwC,CAmBzC;;;AACA,SAAOC,IAAP;AACA,CArBD","sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar GetV = require('./GetV');\nvar IsCallable = require('./IsCallable');\nvar IsPropertyKey = require('./IsPropertyKey');\n\n/**\n * 7.3.9 - https://ecma-international.org/ecma-262/6.0/#sec-getmethod\n * 1. Assert: IsPropertyKey(P) is true.\n * 2. Let func be GetV(O, P).\n * 3. ReturnIfAbrupt(func).\n * 4. If func is either undefined or null, return undefined.\n * 5. If IsCallable(func) is false, throw a TypeError exception.\n * 6. Return func.\n */\n\nmodule.exports = function GetMethod(O, P) {\n\t// 7.3.9.1\n\tif (!IsPropertyKey(P)) {\n\t\tthrow new $TypeError('Assertion failed: IsPropertyKey(P) is not true');\n\t}\n\n\t// 7.3.9.2\n\tvar func = GetV(O, P);\n\n\t// 7.3.9.4\n\tif (func == null) {\n\t\treturn void 0;\n\t}\n\n\t// 7.3.9.5\n\tif (!IsCallable(func)) {\n\t\tthrow new $TypeError(P + 'is not a function');\n\t}\n\n\t// 7.3.9.6\n\treturn func;\n};\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"'use strict';\n\nvar ArraySpeciesCreate = require('es-abstract/2019/ArraySpeciesCreate');\n\nvar Call = require('es-abstract/2019/Call');\n\nvar CreateDataPropertyOrThrow = require('es-abstract/2019/CreateDataPropertyOrThrow');\n\nvar Get = require('es-abstract/2019/Get');\n\nvar HasProperty = require('es-abstract/2019/HasProperty');\n\nvar IsCallable = require('es-abstract/2019/IsCallable');\n\nvar ToUint32 = require('es-abstract/2019/ToUint32');\n\nvar ToObject = require('es-abstract/2019/ToObject');\n\nvar ToString = require('es-abstract/2019/ToString');\n\nvar callBound = require('es-abstract/helpers/callBound');\n\nvar isString = require('is-string'); // Check failure of by-index access of string characters (IE < 9) and failure of `0 in boxedString` (Rhino)\n\n\nvar boxedString = Object('a');\nvar splitString = boxedString[0] !== 'a' || !(0 in boxedString);\nvar strSplit = callBound('String.prototype.split');\n\nmodule.exports = function map(callbackfn) {\n  var O = ToObject(this);\n  var self = splitString && isString(O) ? strSplit(O, '') : O;\n  var len = ToUint32(self.length); // If no callback function or if callback is not a callable function\n\n  if (!IsCallable(callbackfn)) {\n    throw new TypeError('Array.prototype.map callback must be a function');\n  }\n\n  var T;\n\n  if (arguments.length > 1) {\n    T = arguments[1];\n  }\n\n  var A = ArraySpeciesCreate(O, len);\n  var k = 0;\n\n  while (k < len) {\n    var Pk = ToString(k);\n    var kPresent = HasProperty(O, Pk);\n\n    if (kPresent) {\n      var kValue = Get(O, Pk);\n      var mappedValue = Call(callbackfn, T, [kValue, k, O]);\n      CreateDataPropertyOrThrow(A, Pk, mappedValue);\n    }\n\n    k += 1;\n  }\n\n  return A;\n};","map":{"version":3,"sources":["C:/Users/vaibhav/GIT-HUB/link-io/reactApp/node_modules/array.prototype.map/implementation.js"],"names":["ArraySpeciesCreate","require","Call","CreateDataPropertyOrThrow","Get","HasProperty","IsCallable","ToUint32","ToObject","ToString","callBound","isString","boxedString","Object","splitString","strSplit","module","exports","map","callbackfn","O","self","len","length","TypeError","T","arguments","A","k","Pk","kPresent","kValue","mappedValue"],"mappings":"AAAA;;AAEA,IAAIA,kBAAkB,GAAGC,OAAO,CAAC,qCAAD,CAAhC;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,uBAAD,CAAlB;;AACA,IAAIE,yBAAyB,GAAGF,OAAO,CAAC,4CAAD,CAAvC;;AACA,IAAIG,GAAG,GAAGH,OAAO,CAAC,sBAAD,CAAjB;;AACA,IAAII,WAAW,GAAGJ,OAAO,CAAC,8BAAD,CAAzB;;AACA,IAAIK,UAAU,GAAGL,OAAO,CAAC,6BAAD,CAAxB;;AACA,IAAIM,QAAQ,GAAGN,OAAO,CAAC,2BAAD,CAAtB;;AACA,IAAIO,QAAQ,GAAGP,OAAO,CAAC,2BAAD,CAAtB;;AACA,IAAIQ,QAAQ,GAAGR,OAAO,CAAC,2BAAD,CAAtB;;AACA,IAAIS,SAAS,GAAGT,OAAO,CAAC,+BAAD,CAAvB;;AACA,IAAIU,QAAQ,GAAGV,OAAO,CAAC,WAAD,CAAtB,C,CAEA;;;AACA,IAAIW,WAAW,GAAGC,MAAM,CAAC,GAAD,CAAxB;AACA,IAAIC,WAAW,GAAGF,WAAW,CAAC,CAAD,CAAX,KAAmB,GAAnB,IAA0B,EAAE,KAAKA,WAAP,CAA5C;AAEA,IAAIG,QAAQ,GAAGL,SAAS,CAAC,wBAAD,CAAxB;;AAEAM,MAAM,CAACC,OAAP,GAAiB,SAASC,GAAT,CAAaC,UAAb,EAAyB;AACzC,MAAIC,CAAC,GAAGZ,QAAQ,CAAC,IAAD,CAAhB;AACA,MAAIa,IAAI,GAAGP,WAAW,IAAIH,QAAQ,CAACS,CAAD,CAAvB,GAA6BL,QAAQ,CAACK,CAAD,EAAI,EAAJ,CAArC,GAA+CA,CAA1D;AACA,MAAIE,GAAG,GAAGf,QAAQ,CAACc,IAAI,CAACE,MAAN,CAAlB,CAHyC,CAKzC;;AACA,MAAI,CAACjB,UAAU,CAACa,UAAD,CAAf,EAA6B;AAC5B,UAAM,IAAIK,SAAJ,CAAc,iDAAd,CAAN;AACA;;AAED,MAAIC,CAAJ;;AACA,MAAIC,SAAS,CAACH,MAAV,GAAmB,CAAvB,EAA0B;AACzBE,IAAAA,CAAC,GAAGC,SAAS,CAAC,CAAD,CAAb;AACA;;AAED,MAAIC,CAAC,GAAG3B,kBAAkB,CAACoB,CAAD,EAAIE,GAAJ,CAA1B;AACA,MAAIM,CAAC,GAAG,CAAR;;AACA,SAAOA,CAAC,GAAGN,GAAX,EAAgB;AACf,QAAIO,EAAE,GAAGpB,QAAQ,CAACmB,CAAD,CAAjB;AACA,QAAIE,QAAQ,GAAGzB,WAAW,CAACe,CAAD,EAAIS,EAAJ,CAA1B;;AACA,QAAIC,QAAJ,EAAc;AACb,UAAIC,MAAM,GAAG3B,GAAG,CAACgB,CAAD,EAAIS,EAAJ,CAAhB;AACA,UAAIG,WAAW,GAAG9B,IAAI,CAACiB,UAAD,EAAaM,CAAb,EAAgB,CAACM,MAAD,EAASH,CAAT,EAAYR,CAAZ,CAAhB,CAAtB;AACAjB,MAAAA,yBAAyB,CAACwB,CAAD,EAAIE,EAAJ,EAAQG,WAAR,CAAzB;AACA;;AACDJ,IAAAA,CAAC,IAAI,CAAL;AACA;;AAED,SAAOD,CAAP;AACA,CA7BD","sourcesContent":["'use strict';\n\nvar ArraySpeciesCreate = require('es-abstract/2019/ArraySpeciesCreate');\nvar Call = require('es-abstract/2019/Call');\nvar CreateDataPropertyOrThrow = require('es-abstract/2019/CreateDataPropertyOrThrow');\nvar Get = require('es-abstract/2019/Get');\nvar HasProperty = require('es-abstract/2019/HasProperty');\nvar IsCallable = require('es-abstract/2019/IsCallable');\nvar ToUint32 = require('es-abstract/2019/ToUint32');\nvar ToObject = require('es-abstract/2019/ToObject');\nvar ToString = require('es-abstract/2019/ToString');\nvar callBound = require('es-abstract/helpers/callBound');\nvar isString = require('is-string');\n\n// Check failure of by-index access of string characters (IE < 9) and failure of `0 in boxedString` (Rhino)\nvar boxedString = Object('a');\nvar splitString = boxedString[0] !== 'a' || !(0 in boxedString);\n\nvar strSplit = callBound('String.prototype.split');\n\nmodule.exports = function map(callbackfn) {\n\tvar O = ToObject(this);\n\tvar self = splitString && isString(O) ? strSplit(O, '') : O;\n\tvar len = ToUint32(self.length);\n\n\t// If no callback function or if callback is not a callable function\n\tif (!IsCallable(callbackfn)) {\n\t\tthrow new TypeError('Array.prototype.map callback must be a function');\n\t}\n\n\tvar T;\n\tif (arguments.length > 1) {\n\t\tT = arguments[1];\n\t}\n\n\tvar A = ArraySpeciesCreate(O, len);\n\tvar k = 0;\n\twhile (k < len) {\n\t\tvar Pk = ToString(k);\n\t\tvar kPresent = HasProperty(O, Pk);\n\t\tif (kPresent) {\n\t\t\tvar kValue = Get(O, Pk);\n\t\t\tvar mappedValue = Call(callbackfn, T, [kValue, k, O]);\n\t\t\tCreateDataPropertyOrThrow(A, Pk, mappedValue);\n\t\t}\n\t\tk += 1;\n\t}\n\n\treturn A;\n};\n"]},"metadata":{},"sourceType":"script"}
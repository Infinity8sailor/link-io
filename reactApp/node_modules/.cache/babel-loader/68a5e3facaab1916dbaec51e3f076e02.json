{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar getIteratorMethod = require('../helpers/getIteratorMethod');\n\nvar AdvanceStringIndex = require('./AdvanceStringIndex');\n\nvar Call = require('./Call');\n\nvar GetMethod = require('./GetMethod');\n\nvar IsArray = require('./IsArray');\n\nvar Type = require('./Type'); // https://ecma-international.org/ecma-262/6.0/#sec-getiterator\n\n\nmodule.exports = function GetIterator(obj, method) {\n  var actualMethod = method;\n\n  if (arguments.length < 2) {\n    actualMethod = getIteratorMethod({\n      AdvanceStringIndex: AdvanceStringIndex,\n      GetMethod: GetMethod,\n      IsArray: IsArray,\n      Type: Type\n    }, obj);\n  }\n\n  var iterator = Call(actualMethod, obj);\n\n  if (Type(iterator) !== 'Object') {\n    throw new $TypeError('iterator must return an object');\n  }\n\n  return iterator;\n};","map":{"version":3,"sources":["C:/Users/vaibhav/GIT-HUB/link-io/reactApp/node_modules/es-abstract/2019/GetIterator.js"],"names":["GetIntrinsic","require","$TypeError","getIteratorMethod","AdvanceStringIndex","Call","GetMethod","IsArray","Type","module","exports","GetIterator","obj","method","actualMethod","arguments","length","iterator"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,iBAAD,CAA1B;;AAEA,IAAIC,UAAU,GAAGF,YAAY,CAAC,aAAD,CAA7B;;AAEA,IAAIG,iBAAiB,GAAGF,OAAO,CAAC,8BAAD,CAA/B;;AACA,IAAIG,kBAAkB,GAAGH,OAAO,CAAC,sBAAD,CAAhC;;AACA,IAAII,IAAI,GAAGJ,OAAO,CAAC,QAAD,CAAlB;;AACA,IAAIK,SAAS,GAAGL,OAAO,CAAC,aAAD,CAAvB;;AACA,IAAIM,OAAO,GAAGN,OAAO,CAAC,WAAD,CAArB;;AACA,IAAIO,IAAI,GAAGP,OAAO,CAAC,QAAD,CAAlB,C,CAEA;;;AAEAQ,MAAM,CAACC,OAAP,GAAiB,SAASC,WAAT,CAAqBC,GAArB,EAA0BC,MAA1B,EAAkC;AAClD,MAAIC,YAAY,GAAGD,MAAnB;;AACA,MAAIE,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACzBF,IAAAA,YAAY,GAAGX,iBAAiB,CAC/B;AACCC,MAAAA,kBAAkB,EAAEA,kBADrB;AAECE,MAAAA,SAAS,EAAEA,SAFZ;AAGCC,MAAAA,OAAO,EAAEA,OAHV;AAICC,MAAAA,IAAI,EAAEA;AAJP,KAD+B,EAO/BI,GAP+B,CAAhC;AASA;;AACD,MAAIK,QAAQ,GAAGZ,IAAI,CAACS,YAAD,EAAeF,GAAf,CAAnB;;AACA,MAAIJ,IAAI,CAACS,QAAD,CAAJ,KAAmB,QAAvB,EAAiC;AAChC,UAAM,IAAIf,UAAJ,CAAe,gCAAf,CAAN;AACA;;AAED,SAAOe,QAAP;AACA,CAnBD","sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar getIteratorMethod = require('../helpers/getIteratorMethod');\nvar AdvanceStringIndex = require('./AdvanceStringIndex');\nvar Call = require('./Call');\nvar GetMethod = require('./GetMethod');\nvar IsArray = require('./IsArray');\nvar Type = require('./Type');\n\n// https://ecma-international.org/ecma-262/6.0/#sec-getiterator\n\nmodule.exports = function GetIterator(obj, method) {\n\tvar actualMethod = method;\n\tif (arguments.length < 2) {\n\t\tactualMethod = getIteratorMethod(\n\t\t\t{\n\t\t\t\tAdvanceStringIndex: AdvanceStringIndex,\n\t\t\t\tGetMethod: GetMethod,\n\t\t\t\tIsArray: IsArray,\n\t\t\t\tType: Type\n\t\t\t},\n\t\t\tobj\n\t\t);\n\t}\n\tvar iterator = Call(actualMethod, obj);\n\tif (Type(iterator) !== 'Object') {\n\t\tthrow new $TypeError('iterator must return an object');\n\t}\n\n\treturn iterator;\n};\n"]},"metadata":{},"sourceType":"script"}
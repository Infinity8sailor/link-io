{"ast":null,"code":"'use strict';\n\nvar $TypeError = TypeError; // eslint-disable-next-line consistent-return\n\nmodule.exports = function iterateIterator(iterator) {\n  if (!iterator || typeof iterator.next !== 'function') {\n    throw new $TypeError('iterator must be an object with a `next` method');\n  }\n\n  if (arguments.length > 1) {\n    var callback = arguments[1];\n\n    if (typeof callback !== 'function') {\n      throw new $TypeError('`callback`, if provided, must be a function');\n    }\n  }\n\n  var values = callback || [];\n  var result;\n\n  while ((result = iterator.next()) && !result.done) {\n    if (callback) {\n      callback(result.value); // eslint-disable-line callback-return\n    } else {\n      values.push(result.value);\n    }\n  }\n\n  if (!callback) {\n    return values;\n  }\n};","map":{"version":3,"sources":["C:/Users/vaibhav/GIT-HUB/link-io/reactApp/node_modules/iterate-iterator/index.js"],"names":["$TypeError","TypeError","module","exports","iterateIterator","iterator","next","arguments","length","callback","values","result","done","value","push"],"mappings":"AAAA;;AAEA,IAAIA,UAAU,GAAGC,SAAjB,C,CAEA;;AACAC,MAAM,CAACC,OAAP,GAAiB,SAASC,eAAT,CAAyBC,QAAzB,EAAmC;AACnD,MAAI,CAACA,QAAD,IAAa,OAAOA,QAAQ,CAACC,IAAhB,KAAyB,UAA1C,EAAsD;AACrD,UAAM,IAAIN,UAAJ,CAAe,iDAAf,CAAN;AACA;;AACD,MAAIO,SAAS,CAACC,MAAV,GAAmB,CAAvB,EAA0B;AACzB,QAAIC,QAAQ,GAAGF,SAAS,CAAC,CAAD,CAAxB;;AACA,QAAI,OAAOE,QAAP,KAAoB,UAAxB,EAAoC;AACnC,YAAM,IAAIT,UAAJ,CAAe,6CAAf,CAAN;AACA;AACD;;AACD,MAAIU,MAAM,GAAGD,QAAQ,IAAI,EAAzB;AACA,MAAIE,MAAJ;;AACA,SAAO,CAACA,MAAM,GAAGN,QAAQ,CAACC,IAAT,EAAV,KAA8B,CAACK,MAAM,CAACC,IAA7C,EAAmD;AAClD,QAAIH,QAAJ,EAAc;AACbA,MAAAA,QAAQ,CAACE,MAAM,CAACE,KAAR,CAAR,CADa,CACW;AACxB,KAFD,MAEO;AACNH,MAAAA,MAAM,CAACI,IAAP,CAAYH,MAAM,CAACE,KAAnB;AACA;AACD;;AACD,MAAI,CAACJ,QAAL,EAAe;AACd,WAAOC,MAAP;AACA;AACD,CAtBD","sourcesContent":["'use strict';\n\nvar $TypeError = TypeError;\n\n// eslint-disable-next-line consistent-return\nmodule.exports = function iterateIterator(iterator) {\n\tif (!iterator || typeof iterator.next !== 'function') {\n\t\tthrow new $TypeError('iterator must be an object with a `next` method');\n\t}\n\tif (arguments.length > 1) {\n\t\tvar callback = arguments[1];\n\t\tif (typeof callback !== 'function') {\n\t\t\tthrow new $TypeError('`callback`, if provided, must be a function');\n\t\t}\n\t}\n\tvar values = callback || [];\n\tvar result;\n\twhile ((result = iterator.next()) && !result.done) {\n\t\tif (callback) {\n\t\t\tcallback(result.value); // eslint-disable-line callback-return\n\t\t} else {\n\t\t\tvalues.push(result.value);\n\t\t}\n\t}\n\tif (!callback) {\n\t\treturn values;\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}
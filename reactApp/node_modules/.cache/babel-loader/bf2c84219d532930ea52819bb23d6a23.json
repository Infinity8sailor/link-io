{"ast":null,"code":"'use strict';\n\nvar callBound = require('../helpers/callBound');\n\nvar $arrayPush = callBound('Array.prototype.push');\n\nvar GetIterator = require('./GetIterator');\n\nvar IteratorStep = require('./IteratorStep');\n\nvar IteratorValue = require('./IteratorValue'); // https://www.ecma-international.org/ecma-262/8.0/#sec-iterabletolist\n\n\nmodule.exports = function IterableToList(items, method) {\n  var iterator = GetIterator(items, method);\n  var values = [];\n  var next = true;\n\n  while (next) {\n    next = IteratorStep(iterator);\n\n    if (next) {\n      var nextValue = IteratorValue(next);\n      $arrayPush(values, nextValue);\n    }\n  }\n\n  return values;\n};","map":{"version":3,"sources":["C:/Users/vaibhav/GIT-HUB/link-io/reactApp/node_modules/es-abstract/2019/IterableToList.js"],"names":["callBound","require","$arrayPush","GetIterator","IteratorStep","IteratorValue","module","exports","IterableToList","items","method","iterator","values","next","nextValue"],"mappings":"AAAA;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,sBAAD,CAAvB;;AACA,IAAIC,UAAU,GAAGF,SAAS,CAAC,sBAAD,CAA1B;;AAEA,IAAIG,WAAW,GAAGF,OAAO,CAAC,eAAD,CAAzB;;AACA,IAAIG,YAAY,GAAGH,OAAO,CAAC,gBAAD,CAA1B;;AACA,IAAII,aAAa,GAAGJ,OAAO,CAAC,iBAAD,CAA3B,C,CAEA;;;AAEAK,MAAM,CAACC,OAAP,GAAiB,SAASC,cAAT,CAAwBC,KAAxB,EAA+BC,MAA/B,EAAuC;AACvD,MAAIC,QAAQ,GAAGR,WAAW,CAACM,KAAD,EAAQC,MAAR,CAA1B;AACA,MAAIE,MAAM,GAAG,EAAb;AACA,MAAIC,IAAI,GAAG,IAAX;;AACA,SAAOA,IAAP,EAAa;AACZA,IAAAA,IAAI,GAAGT,YAAY,CAACO,QAAD,CAAnB;;AACA,QAAIE,IAAJ,EAAU;AACT,UAAIC,SAAS,GAAGT,aAAa,CAACQ,IAAD,CAA7B;AACAX,MAAAA,UAAU,CAACU,MAAD,EAASE,SAAT,CAAV;AACA;AACD;;AACD,SAAOF,MAAP;AACA,CAZD","sourcesContent":["'use strict';\n\nvar callBound = require('../helpers/callBound');\nvar $arrayPush = callBound('Array.prototype.push');\n\nvar GetIterator = require('./GetIterator');\nvar IteratorStep = require('./IteratorStep');\nvar IteratorValue = require('./IteratorValue');\n\n// https://www.ecma-international.org/ecma-262/8.0/#sec-iterabletolist\n\nmodule.exports = function IterableToList(items, method) {\n\tvar iterator = GetIterator(items, method);\n\tvar values = [];\n\tvar next = true;\n\twhile (next) {\n\t\tnext = IteratorStep(iterator);\n\t\tif (next) {\n\t\t\tvar nextValue = IteratorValue(next);\n\t\t\t$arrayPush(values, nextValue);\n\t\t}\n\t}\n\treturn values;\n};\n"]},"metadata":{},"sourceType":"script"}